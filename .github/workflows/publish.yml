name: Publish

on:
  push:
    branches:
      - main

permissions:
  contents: read

concurrency:
  group: publish
  cancel-in-progress: false

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          registry-url: https://registry.npmjs.org

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build

      - name: Read package metadata
        id: package-info
        run: |
          PACKAGE_NAME=$(node -p "require('./package.json').name")
          PACKAGE_VERSION=$(node -p "require('./package.json').version")
          {
            echo "name=$PACKAGE_NAME"
            echo "version=$PACKAGE_VERSION"
          } >> "$GITHUB_OUTPUT"

      - name: Check if publish is required
        id: publish-check
        env:
          PACKAGE_NAME: ${{ steps.package-info.outputs.name }}
          PACKAGE_VERSION: ${{ steps.package-info.outputs.version }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          if npm view "$PACKAGE_NAME@$PACKAGE_VERSION" version >/dev/null 2>&1; then
            echo "publish=false" >> "$GITHUB_OUTPUT"
          else
            echo "publish=true" >> "$GITHUB_OUTPUT"
          fi

      - name: Publish package
        if: steps.publish-check.outputs.publish == 'true'
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npm publish --access restricted

      - name: Publish skipped
        if: steps.publish-check.outputs.publish != 'true'
        run: echo "Package version ${{ steps.package-info.outputs.version }} is already published. Skipping."
